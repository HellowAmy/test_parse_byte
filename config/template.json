{
    "mode_list": [
        {
            "pack_begin": "aaee",
            "pack_end": "eefc",
            "format_cmds": [
                "{aaee*}",
                "{*eefc}",
                "(2*)",
                "(4*)",
                "(4*)",
                "[+4]"
            ]
        },
        {
            "pack_begin": "aaee",
            "pack_end": "eefc",
            "format_cmds": [
                "{aaee*}",
                "{*eefc}",
                "(2*)",
                "(4*)",
                "[+4+2]"
            ]
        },        
        {
            "pack_begin": "SS",
            "pack_end": "SS",
            "format_cmds": [
                "符号说明: 字符 * 代表剩余字符左偏,或者右偏, DD 代表数字, SS 代表字符",
                "命令说明: 跳过命令条件触发时, 会跳过接下来的多条命令, 可用于创建不同分支的格式化效果",
                "=====",
                "{SS*}          // 查找指定 SS 字符并截断 ,左偏", 
                "{*SS}          // 查找指定 SS 字符并截断 ,右偏",
                "(DD*)          // 偏移 DD 个字符并截断 ,左偏",
                "(*DD)          // 偏移 DD 个字符并截断 ,右偏",
                "<DD>=0         // 从当前位置标记 DD 个字符 ,放入标记容器的 0 索引",
                "<D1>(DD)=1     // 偏移 DD 个位置, 标记 DD 个字符 ,放入标记容器的 1 索引",
                "<D1>{SS}=2     // 查找到 SS 字符位置, 标记 DD 个字符 ,放入标记容器的 2 索引",
                ":D1:(D2){SS}   // 跳过命令条件 ,D2 为对比的标记容器索引数据 ,SS 为对比数据 ,当条件不满足时跳过 D1 条数据 ,否则继续执行",
                "[+D]           // 格式列表 ,循环切割 DD 个位置 ,直到剩余字符为空",
                "[+D1+D2]       // 格式分段列表 ,循环切割 DX 个位置 ,可以由多个 DX 组合,直到剩余字符为空",
                "====="
            ]
        }
    ]
}